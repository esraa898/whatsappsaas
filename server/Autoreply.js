const _0x221593 = _0x375e; (function (_0x1a1c81, _0x251cdb) { const _0xc43db9 = _0x375e, _0x13bbd0 = _0x1a1c81(); while (!![]) { try { const _0x2537a3 = parseInt(_0xc43db9(0x181)) / 0x1 * (-parseInt(_0xc43db9(0x17e)) / 0x2) + -parseInt(_0xc43db9(0x199)) / 0x3 * (-parseInt(_0xc43db9(0x185)) / 0x4) + -parseInt(_0xc43db9(0x171)) / 0x5 * (parseInt(_0xc43db9(0x17f)) / 0x6) + -parseInt(_0xc43db9(0x1a5)) / 0x7 * (parseInt(_0xc43db9(0x1aa)) / 0x8) + -parseInt(_0xc43db9(0x183)) / 0x9 + parseInt(_0xc43db9(0x1a2)) / 0xa + parseInt(_0xc43db9(0x1a6)) / 0xb * (parseInt(_0xc43db9(0x1a1)) / 0xc); if (_0x2537a3 === _0x251cdb) break; else _0x13bbd0['push'](_0x13bbd0['shift']()); } catch (_0xcf97ef) { _0x13bbd0['push'](_0x13bbd0['shift']()); } } }(_0x28fe, 0xb2447)); const { dbQuery } = require('./Querydb'); require(_0x221593(0x198))[_0x221593(0x182)](); const { default: makeWASocket, downloadContentFromMessage } = require(_0x221593(0x18a)), axios = require(_0x221593(0x179)), fs = require('fs'), { db } = require(_0x221593(0x188)); async function removeForbiddenCharacters(_0x1e72eb) { const _0x372636 = _0x221593; let _0x5020bb = ['/', '?', '&', '=', '\x22']; for (let _0x24c77c of _0x5020bb) { _0x1e72eb = _0x1e72eb['split'](_0x24c77c)[_0x372636(0x18c)](''); } return _0x1e72eb; } const autoReply = async (_0x202067, _0x16bb3d) => { const _0x4b95c5 = _0x221593; try { if (!_0x202067[_0x4b95c5(0x176)]) return; _0x202067 = _0x202067[_0x4b95c5(0x176)][0x0]; if (_0x202067['key'][_0x4b95c5(0x192)] === _0x4b95c5(0x18b)) return; const _0x36ce59 = Object[_0x4b95c5(0x17d)](_0x202067[_0x4b95c5(0x19f)] || {})[0x0], _0x4f7879 = _0x36ce59 === 'conversation' && _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x191)] ? _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x191)] : _0x36ce59 == _0x4b95c5(0x197) && _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x197)][_0x4b95c5(0x173)] ? _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x197)][_0x4b95c5(0x173)] : _0x36ce59 == _0x4b95c5(0x180) && _0x202067['message']['videoMessage'][_0x4b95c5(0x173)] ? _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x180)]['caption'] : _0x36ce59 == _0x4b95c5(0x17b) && _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x17b)][_0x4b95c5(0x190)] ? _0x202067[_0x4b95c5(0x19f)]['extendedTextMessage'][_0x4b95c5(0x190)] : _0x36ce59 == _0x4b95c5(0x189) && _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x19b)]?.[_0x4b95c5(0x193)] ? _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x19b)]['title'] : _0x36ce59 == _0x4b95c5(0x189) ? _0x202067[_0x4b95c5(0x19f)][_0x4b95c5(0x178)][_0x4b95c5(0x1a0)] : '', _0x14fddc = _0x4f7879[_0x4b95c5(0x186)](), _0x2e4a6d = await removeForbiddenCharacters(_0x14fddc), _0x201e33 = _0x202067['key'][_0x4b95c5(0x192)][_0x4b95c5(0x17c)]('@')[0x0]; let _0x3c22b7; if (_0x36ce59 === 'imageMessage') { const _0x589ceb = await downloadContentFromMessage(_0x202067[_0x4b95c5(0x19f)]['imageMessage'], _0x4b95c5(0x1a7)); let _0x55fe59 = Buffer[_0x4b95c5(0x1a8)]([]); for await (const _0x4410a5 of _0x589ceb) { _0x55fe59 = Buffer[_0x4b95c5(0x1a9)]([_0x55fe59, _0x4410a5]); } _0x3c22b7 = _0x55fe59[_0x4b95c5(0x174)](_0x4b95c5(0x19c)); } else urlImage = null; if (_0x202067['key'][_0x4b95c5(0x177)] === !![]) return; let _0x67efef; const _0x108e4f = await dbQuery(_0x4b95c5(0x1a4) + _0x2e4a6d + '\x22\x20AND\x20device\x20=\x20' + _0x16bb3d[_0x4b95c5(0x184)]['id'][_0x4b95c5(0x17c)](':')[0x0] + _0x4b95c5(0x194)); if (_0x108e4f[_0x4b95c5(0x18e)] === 0x0) { const _0x354fb2 = _0x16bb3d[_0x4b95c5(0x184)]['id'][_0x4b95c5(0x17c)](':')[0x0], _0x27ecd5 = await dbQuery(_0x4b95c5(0x19a) + _0x354fb2 + _0x4b95c5(0x18d)), _0x49b86b = _0x27ecd5[0x0][_0x4b95c5(0x187)]; if (_0x49b86b === null) return; const _0x4c5f7a = await sendWebhook({ 'command': _0x14fddc, 'bufferImage': _0x3c22b7, 'from': _0x201e33, 'url': _0x49b86b }); if (_0x4c5f7a === ![]) return; _0x67efef = JSON[_0x4b95c5(0x18f)](_0x4c5f7a); } else _0x67efef = process['env'][_0x4b95c5(0x172)] === _0x4b95c5(0x17a) ? _0x108e4f[0x0][_0x4b95c5(0x195)] : JSON[_0x4b95c5(0x18f)](_0x108e4f[0x0][_0x4b95c5(0x195)]); await _0x16bb3d[_0x4b95c5(0x1a3)](_0x202067[_0x4b95c5(0x19d)]['remoteJid'], JSON['parse'](_0x67efef))[_0x4b95c5(0x196)](_0x585f32 => { _0x16bb3d['end'](); }); } catch (_0x251e69) { console[_0x4b95c5(0x175)](_0x251e69); } }; function _0x28fe() { const _0x3677f6 = ['catch', 'imageMessage', 'dotenv', '2418QMFLVp', 'SELECT\x20webhook\x20FROM\x20numbers\x20WHERE\x20body\x20=\x20\x27', 'listResponseMessage', 'base64', 'key', 'exports', 'message', 'selectedDisplayText', '38297628JIzVZG', '10764410fgcKMX', 'sendMessage', 'SELECT\x20*\x20FROM\x20autoreplies\x20WHERE\x20keyword\x20=\x20\x22', '3108gXaYlp', '11HWSQsE', 'image', 'from', 'concat', '24280aAkRZF', '171725usmXwd', 'TYPE_SERVER', 'caption', 'toString', 'log', 'messages', 'fromMe', 'buttonsResponseMessage', 'axios', 'hosting', 'extendedTextMessage', 'split', 'keys', '2jXUKsX', '36sfBHpU', 'videoMessage', '1338907kLmYob', 'config', '9412128RjZKXV', 'user', '1988peeuse', 'toLowerCase', 'webhook', './Database', 'messageContextInfo', '@adiwajshing/baileys', 'status@broadcast', 'join', '\x27\x20LIMIT\x201', 'length', 'stringify', 'text', 'conversation', 'remoteJid', 'title', '\x20LIMIT\x201', 'reply']; _0x28fe = function () { return _0x3677f6; }; return _0x28fe(); } function _0x375e(_0x3ef86b, _0x36efa3) { const _0x28fe7e = _0x28fe(); return _0x375e = function (_0x375ec0, _0x5e4807) { _0x375ec0 = _0x375ec0 - 0x171; let _0x3e5dec = _0x28fe7e[_0x375ec0]; return _0x3e5dec; }, _0x375e(_0x3ef86b, _0x36efa3); } async function sendWebhook({ command: _0x1fa488, bufferImage: _0x174484, from: _0x5ae4a2, url: _0x54941a }) { const _0x2d2567 = _0x221593; try { const _0x2c99c9 = { 'message': _0x1fa488, 'bufferImage': _0x174484, 'from': _0x5ae4a2 }, _0x406204 = { 'Content-Type': 'application/json;\x20charset=utf-8' }, _0x2f61c1 = await axios['post'](_0x54941a, _0x2c99c9, _0x406204)[_0x2d2567(0x196)](() => { return ![]; }); return _0x2f61c1['data']; } catch (_0x316087) { return console[_0x2d2567(0x175)](_0x316087), ![]; } } module[_0x221593(0x19e)] = { 'autoReply': autoReply };